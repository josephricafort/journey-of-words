html_nodes("record")
)
which(
xml_string %>%
html_nodes("record")
)
which(
xml_string %>%
html_nodes("record")
)
xml_string %>%
html_nodes("record")
xml_string %>%
html_nodes("record")
xml_string %>%
html_nodes("record")
xml_string %>%
html_nodes("record")
xml_string %>%
html_nodes("record")
xml_string %>%
html_nodes("record")
xml_string %>%
html_nodes("record")
?html
?xml
?xml2
xml_string %>%
html_nodes("record") %>%
html_node("latitude")
?all
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
all(is.na)
xml_string %>%
html_nodes("record") %>%
html_node("latitude")
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
all(is.na)
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
is.na
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
is.na %>%
all
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
is.na %>%
which
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
!is.na %>%
which
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
!(is.na) %>%
which
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
!(is.na)
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
is.na(!)
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
is.na()
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
!is.na()
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text %>%
!is.na()
xml_string %>%
html_nodes("record") %>%
html_node("latitude") %>%
html_text
xml_string %>%
html_node("latitude")
xml_string %>%
html_node("latitude") %>%
html_text
latitude <- xml_string %>% html_node("latitude") %>% html_text
longitude <- xml_string %>% html_node("longitude") %>% html_text
latitude
longitude
language_words
xml_string %>%
html_nodes("record")
print(paste("Downloading language info ", i, "...", sep = ""))
xml_string <- paste(url_api, i %>% as.character, sep = "") %>%
read_html()
language_info <- xml_string %>%
html_node("record")
language_info
id
word_id
tibble(id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_words <- tibble(id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_words
language_info <- tibble(id_lang, language, author, silcode, glottocode, notes, problems, classification, typedby, checkedby)
language_info
language_words <- tibble(id_lang, language, id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_words
language_info_api <- tibble()
language_words_api <- tibble()
print(paste("Language ", language, "accessed...", sep = ""))
print(paste("Language ", language, " accessed...", sep = ""))
language_info_api <- tibble()
language_words_api <- tibble()
# Fetching by API
for (i in first: last) {
language_info <- tibble()
language_words <- tibble()
print(paste("Downloading language info ", i, "...", sep = ""))
xml_string <- paste(url_api, i %>% as.character, sep = "") %>%
read_html()
language_info <- xml_string %>%
html_node("record")
id_lang <- language_info %>% html_node("id") %>% html_text
language <- language_info %>% html_node("language") %>% html_text
author <- language_info %>% html_node("author") %>% html_text
silcode <- language_info %>% html_node("silcode") %>% html_text
glottocode <- language_info %>% html_node("glottocode") %>% html_text
notes <- language_info %>% html_node("notes") %>% html_text
problems <- language_info %>% html_node("problems") %>% html_text
classification <- language_info %>% html_node("classification") %>% html_text
typedby <- language_info %>% html_node("typedby") %>% html_text
checkedby <- language_info %>% html_node("checkedby") %>% html_text
latitude <- xml_string %>% html_node("latitude") %>% html_text
longitude <- xml_string %>% html_node("longitude") %>% html_text
language_words <- xml_string %>%
html_nodes("record") %>%
extract(-1)
id <- language_words %>% html_node("id") %>% html_text
word_id <- language_words %>% html_node("word_id") %>% html_text
word <- language_words %>% html_node("word") %>% html_text
item <- language_words %>% html_node("item") %>% html_text
annotation <- language_words %>% html_node("annotation") %>% html_text
loan <- language_words %>% html_node("loan") %>% html_text
cognacy <- language_words %>% html_node("cognacy") %>% html_text
pmpcognacy <- language_words %>% html_node("pmpcognacy") %>% html_text
language_info <- tibble(id_lang, language, author, silcode, glottocode, notes, problems, classification, typedby, checkedby)
language_words <- tibble(id_lang, language, id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_info_api <- bind_rows(language_info)
language_words_api <- bind_rows(language_words)
print(paste("Language ", language, " accessed...", sep = ""))
}
language_info_api
language_info_api <- tibble()
language_words_api <- tibble()
# Fetching by API
for (i in first: last) {
language_info <- tibble()
language_words <- tibble()
print(paste("Downloading language info ", i, "...", sep = ""))
xml_string <- paste(url_api, i %>% as.character, sep = "") %>%
read_html()
language_info <- xml_string %>%
html_node("record")
id_lang <- language_info %>% html_node("id") %>% html_text
language <- language_info %>% html_node("language") %>% html_text
author <- language_info %>% html_node("author") %>% html_text
silcode <- language_info %>% html_node("silcode") %>% html_text
glottocode <- language_info %>% html_node("glottocode") %>% html_text
notes <- language_info %>% html_node("notes") %>% html_text
problems <- language_info %>% html_node("problems") %>% html_text
classification <- language_info %>% html_node("classification") %>% html_text
typedby <- language_info %>% html_node("typedby") %>% html_text
checkedby <- language_info %>% html_node("checkedby") %>% html_text
latitude <- xml_string %>% html_node("latitude") %>% html_text
longitude <- xml_string %>% html_node("longitude") %>% html_text
language_words <- xml_string %>%
html_nodes("record") %>%
extract(-1)
id <- language_words %>% html_node("id") %>% html_text
word_id <- language_words %>% html_node("word_id") %>% html_text
word <- language_words %>% html_node("word") %>% html_text
item <- language_words %>% html_node("item") %>% html_text
annotation <- language_words %>% html_node("annotation") %>% html_text
loan <- language_words %>% html_node("loan") %>% html_text
cognacy <- language_words %>% html_node("cognacy") %>% html_text
pmpcognacy <- language_words %>% html_node("pmpcognacy") %>% html_text
language_info <- tibble(id_lang, language, author, silcode, glottocode, notes, problems, classification, typedby, checkedby)
language_words <- tibble(id_lang, language, id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_info_api <- bind_rows(language_info_api, language_info)
language_words_api <- bind_rows(language_words_api, language_words)
print(paste("Language ", language, " accessed...", sep = ""))
}
language_info_api
language_words_api
language_info_api <- tibble()
language_words_api <- tibble()
# Fetching by API
for (i in first: last) {
language_info <- tibble()
language_words <- tibble()
print(paste("Downloading language info ", i, "...", sep = ""))
xml_string <- paste(url_api, i %>% as.character, sep = "") %>%
read_html()
language_info <- xml_string %>%
html_node("record")
id_lang <- language_info %>% html_node("id") %>% html_text
language <- language_info %>% html_node("language") %>% html_text
author <- language_info %>% html_node("author") %>% html_text
silcode <- language_info %>% html_node("silcode") %>% html_text
glottocode <- language_info %>% html_node("glottocode") %>% html_text
notes <- language_info %>% html_node("notes") %>% html_text
problems <- language_info %>% html_node("problems") %>% html_text
classification <- language_info %>% html_node("classification") %>% html_text
typedby <- language_info %>% html_node("typedby") %>% html_text
checkedby <- language_info %>% html_node("checkedby") %>% html_text
latitude <- xml_string %>% html_node("latitude") %>% html_text
longitude <- xml_string %>% html_node("longitude") %>% html_text
language_words <- xml_string %>%
html_nodes("record") %>%
extract(-1)
id <- language_words %>% html_node("id") %>% html_text
word_id <- language_words %>% html_node("word_id") %>% html_text
word <- language_words %>% html_node("word") %>% html_text
item <- language_words %>% html_node("item") %>% html_text
annotation <- language_words %>% html_node("annotation") %>% html_text
loan <- language_words %>% html_node("loan") %>% html_text
cognacy <- language_words %>% html_node("cognacy") %>% html_text
pmpcognacy <- language_words %>% html_node("pmpcognacy") %>% html_text
language_info <- tibble(id_lang, language, author, silcode, glottocode, notes, problems, classification, typedby, checkedby)
language_words <- tibble(id_lang, language, id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_info_api <- bind_rows(language_info_api, language_info)
language_words_api <- bind_rows(language_words_api, language_words)
print(paste("Language ", language, " accessed...", sep = ""))
}
language_info_api <- tibble()
language_words_api <- tibble()
# Fetching by API
for (i in first: last) {
language_info <- tibble()
language_words <- tibble()
print(paste("Downloading language info ", i, "...", sep = ""))
xml_string <- paste(url_api, i %>% as.character, sep = "") %>%
read_html()
language_info <- xml_string %>%
html_node("record")
id_lang <- language_info %>% html_node("id") %>% html_text
language <- language_info %>% html_node("language") %>% html_text
author <- language_info %>% html_node("author") %>% html_text
silcode <- language_info %>% html_node("silcode") %>% html_text
glottocode <- language_info %>% html_node("glottocode") %>% html_text
notes <- language_info %>% html_node("notes") %>% html_text
problems <- language_info %>% html_node("problems") %>% html_text
classification <- language_info %>% html_node("classification") %>% html_text
typedby <- language_info %>% html_node("typedby") %>% html_text
checkedby <- language_info %>% html_node("checkedby") %>% html_text
latitude <- xml_string %>% html_node("latitude") %>% html_text
longitude <- xml_string %>% html_node("longitude") %>% html_text
language_words <- xml_string %>%
html_nodes("record") %>%
extract(-1)
id <- language_words %>% html_node("id") %>% html_text
word_id <- language_words %>% html_node("word_id") %>% html_text
word <- language_words %>% html_node("word") %>% html_text
item <- language_words %>% html_node("item") %>% html_text
annotation <- language_words %>% html_node("annotation") %>% html_text
loan <- language_words %>% html_node("loan") %>% html_text
cognacy <- language_words %>% html_node("cognacy") %>% html_text
pmpcognacy <- language_words %>% html_node("pmpcognacy") %>% html_text
language_info <- tibble(id_lang, language, author, silcode, glottocode, notes, problems, classification, typedby, checkedby, latitude, longitude)
language_words <- tibble(id_lang, language, id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_info_api <- bind_rows(language_info_api, language_info)
language_words_api <- bind_rows(language_words_api, language_words)
print(paste("Language ", language, " accessed...", sep = ""))
}
language_info_api
language_words_api
language_info_api <- tibble()
language_words_api <- tibble()
# Fetching by API
for (i in first: last) {
language_info <- tibble()
language_words <- tibble()
print(paste("Downloading language info ", i, "...", sep = ""))
xml_string <- paste(url_api, i %>% as.character, sep = "") %>%
read_html()
language_info <- xml_string %>%
html_node("record")
id_lang <- language_info %>% html_node("id") %>% html_text
language <- language_info %>% html_node("language") %>% html_text
author <- language_info %>% html_node("author") %>% html_text
silcode <- language_info %>% html_node("silcode") %>% html_text
glottocode <- language_info %>% html_node("glottocode") %>% html_text
notes <- language_info %>% html_node("notes") %>% html_text
problems <- language_info %>% html_node("problems") %>% html_text
classification <- language_info %>% html_node("classification") %>% html_text
typedby <- language_info %>% html_node("typedby") %>% html_text
checkedby <- language_info %>% html_node("checkedby") %>% html_text
latitude <- xml_string %>% html_node("latitude") %>% html_text
longitude <- xml_string %>% html_node("longitude") %>% html_text
language_words <- xml_string %>%
html_nodes("record") %>%
extract(-1)
id <- language_words %>% html_node("id") %>% html_text
word_id <- language_words %>% html_node("word_id") %>% html_text
word <- language_words %>% html_node("word") %>% html_text
item <- language_words %>% html_node("item") %>% html_text
annotation <- language_words %>% html_node("annotation") %>% html_text
loan <- language_words %>% html_node("loan") %>% html_text
cognacy <- language_words %>% html_node("cognacy") %>% html_text
pmpcognacy <- language_words %>% html_node("pmpcognacy") %>% html_text
language_info <- tibble(id_lang, language, author, silcode, glottocode, notes, problems, classification, typedby, checkedby, latitude, longitude)
language_words <- tibble(id_lang, language, id, word_id, word, item, annotation, loan, cognacy, pmpcognacy)
language_info_api <- bind_rows(language_info_api, language_info)
language_words_api <- bind_rows(language_words_api, language_words)
print(paste("Language ", language, " accessed...", sep = ""))
}
language_info_api
language_words_api
language_words_api %>%
filter(is.na(id))
language_words_api %>%
filter(!is.na(id))
language_words_api_clean <- language_words_api %>%
filter(!is.na(id))
language_info_api
language_info_api %>%
select(id_lang, author, silcode)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, author, silcode)
)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, author, silcode)
) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id))
language_words_api_clean <- language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, author, silcode)
) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, author, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:author)
language_words_api
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
# by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language"))
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:author)
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language"))
language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:pmpcognacy)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:pmpcognacy)
language_words_api_clean <- language_words_api %>%
filter(!is.na(id)) %>%
left_join(
language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:pmpcognacy)
language_words_api_clean
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:pmpcognacy)
language_words_api_clean <- language_words_api %>%
filter(!is.na(id)) %>%
left_join(language_info_api %>%
select(id_lang, language, silcode)
,
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:pmpcognacy)
language_words_api_clean <- language_words_api %>%
filter(!is.na(id)) %>%
left_join(language_info_api %>%
select(id_lang, language, silcode),
by = c("id_lang", "language")) %>%
select(id_lang, language, silcode, id:pmpcognacy)
language_words_api_clean
language_info_api
language_words_api_clean
language_words_api_clean <- language_words_api %>%
filter(!is.na(id)) %>%
left_join(language_info_api %>%
select(id_lang, language, silcode),
by = c("id_lang", "language")) %>%
select(language, id_lang, silcode, id:pmpcognacy) %>%
arrange(language)
language_words_api_clean
language_words_api_clean <- language_words_api %>%
filter(!is.na(id)) %>%
left_join(language_info_api %>%
select(id_lang, language, silcode),
by = c("id_lang", "language")) %>%
select(language, silcode, id_lang, id:pmpcognacy) %>%
arrange(language)
language_words_api_clean
language_words_api_clean <- language_words_api %>%
filter(!is.na(id)) %>%
left_join(language_info_api %>%
select(id_lang, language, silcode),
by = c("id_lang", "language")) %>%
select(language, silcode, id_lang, id:pmpcognacy) %>%
arrange(language)
language_words_api_clean
